{
  "dashboard": {
    "id": null,
    "title": "IoT ML Pipeline Monitoring Dashboard",
    "tags": ["iot", "ml", "monitoring", "anomaly-detection"],
    "timezone": "browser",
    "panels": [
      {
        "id": 1,
        "title": "Real-Time Temperature Readings",
        "type": "timeseries",
        "targets": [
          {
            "rawSql": "SELECT timestamp as time, temperature as value, sensor_id FROM sensor_readings WHERE $__timeFilter(timestamp) ORDER BY timestamp",
            "refId": "A"
          }
        ],
        "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0},
        "fieldConfig": {
          "defaults": {
            "color": {"mode": "palette-classic"},
            "unit": "celsius"
          }
        }
      },
      {
        "id": 2,
        "title": "Anomaly Detection Rate",
        "type": "stat",
        "targets": [
          {
            "rawSql": "SELECT COUNT(*) as value FROM anomaly_alerts WHERE $__timeFilter(timestamp)",
            "refId": "A"
          }
        ],
        "gridPos": {"h": 4, "w": 6, "x": 12, "y": 0},
        "fieldConfig": {
          "defaults": {
            "color": {"mode": "thresholds"},
            "thresholds": {
              "steps": [
                {"color": "green", "value": null},
                {"color": "yellow", "value": 5},
                {"color": "red", "value": 10}
              ]
            }
          }
        }
      },
      {
        "id": 3,
        "title": "Pipeline Performance",
        "type": "timeseries",
        "targets": [
          {
            "rawSql": "SELECT timestamp as time, metric_value as value, metric_name FROM pipeline_metrics WHERE metric_name IN ('batch_processing_time_ms', 'ml_inference_time_ms') AND $__timeFilter(timestamp) ORDER BY timestamp",
            "refId": "A"
          }
        ],
        "gridPos": {"h": 4, "w": 6, "x": 18, "y": 0},
        "fieldConfig": {
          "defaults": {
            "unit": "ms"
          }
        }
      },
      {
        "id": 4,
        "title": "Temperature vs Humidity Scatter Plot",
        "type": "scatterplot",
        "targets": [
          {
            "rawSql": "SELECT temperature, humidity, CASE WHEN ml_prediction = -1 THEN 'Anomaly' ELSE 'Normal' END as status FROM sensor_readings WHERE $__timeFilter(timestamp)",
            "refId": "A"
          }
        ],
        "gridPos": {"h": 8, "w": 12, "x": 0, "y": 8}
      },
      {
        "id": 5,
        "title": "System Events Log",
        "type": "logs",
        "targets": [
          {
            "rawSql": "SELECT timestamp, event_type, event_status, message FROM system_events WHERE $__timeFilter(timestamp) ORDER BY timestamp DESC LIMIT 100",
            "refId": "A"
          }
        ],
        "gridPos": {"h": 8, "w": 12, "x": 12, "y": 8}
      },
      {
        "id": 6,
        "title": "Sensor Status Table",
        "type": "table",
        "targets": [
          {
            "rawSql": "SELECT sensor_id, temperature, humidity, CASE WHEN ml_prediction = -1 THEN 'ANOMALY' ELSE 'NORMAL' END as status, timestamp FROM sensor_readings WHERE timestamp > NOW() - INTERVAL '5 minutes' ORDER BY timestamp DESC LIMIT 20",
            "refId": "A"
          }
        ],
        "gridPos": {"h": 6, "w": 24, "x": 0, "y": 16}
      },
      {
        "id": 7,
        "title": "MinIO Upload Success Rate",
        "type": "stat",
        "targets": [
          {
            "rawSql": "SELECT (SUM(CASE WHEN metric_name = 'minio_upload_success' THEN metric_value ELSE 0 END) / NULLIF(SUM(CASE WHEN metric_name IN ('minio_upload_success', 'minio_upload_failed') THEN metric_value ELSE 0 END), 0)) * 100 as value FROM pipeline_metrics WHERE $__timeFilter(timestamp)",
            "refId": "A"
          }
        ],
        "gridPos": {"h": 3, "w": 6, "x": 0, "y": 22},
        "fieldConfig": {
          "defaults": {
            "unit": "percent",
            "color": {"mode": "thresholds"},
            "thresholds": {
              "steps": [
                {"color": "red", "value": null},
                {"color": "yellow", "value": 80},
                {"color": "green", "value": 95}
              ]
            }
          }
        }
      },
      {
        "id": 8,
        "title": "Database Save Success Rate",
        "type": "stat",
        "targets": [
          {
            "rawSql": "SELECT (SUM(CASE WHEN metric_name = 'db_save_success' THEN metric_value ELSE 0 END) / NULLIF(SUM(CASE WHEN metric_name IN ('db_save_success', 'db_save_failed') THEN metric_value ELSE 0 END), 0)) * 100 as value FROM pipeline_metrics WHERE $__timeFilter(timestamp)",
            "refId": "A"
          }
        ],
        "gridPos": {"h": 3, "w": 6, "x": 6, "y": 22},
        "fieldConfig": {
          "defaults": {
            "unit": "percent",
            "color": {"mode": "thresholds"},
            "thresholds": {
              "steps": [
                {"color": "red", "value": null},
                {"color": "yellow", "value": 80},
                {"color": "green", "value": 95}
              ]
            }
          }
        }
      },
      {
        "id": 9,
        "title": "Anomaly Rate Over Time",
        "type": "timeseries",
        "targets": [
          {
            "rawSql": "SELECT timestamp as time, metric_value as value FROM pipeline_metrics WHERE metric_name = 'anomaly_rate_percent' AND $__timeFilter(timestamp) ORDER BY timestamp",
            "refId": "A"
          }
        ],
        "gridPos": {"h": 3, "w": 12, "x": 12, "y": 22},
        "fieldConfig": {
          "defaults": {
            "unit": "percent",
            "color": {"mode": "continuous-GrYlRd"}
          }
        }
      }
    ],
    "time": {
      "from": "now-1h",
      "to": "now"
    },
    "refresh": "5s",
    "templating": {
      "list": [
        {
          "name": "sensor",
          "type": "query",
          "query": "SELECT DISTINCT sensor_id FROM sensor_readings",
          "multi": true,
          "includeAll": true
        }
      ]
    }
  }
}